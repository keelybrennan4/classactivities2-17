**Phase I Objectives**
Become familiar with the various elements of the HTML page as it is written now. (Identify the classes and IDs that matter!)
Create a general strategy for how you will accomplish the task:

>How will you capture button clicks? 
We can select all of the buttons to listen for an event.
$(button).click() -- actually, we'll select the number buttons and operator buttons separately. see below Q&A. 

>What will you do with the numbers clicked?
pass the value of the first number clicked into a variable (firstNumber)
pass the value of the second number clicked into a second variable (secondNumber)
in order to have a number greater than 1 digit, each of these variables needs to be set equal to an empty string so we can add multiple numbers to create a multi-digit number.
we set each variable equal to an empty string so we can pass the value of the numbers clicked into the string when evaluating the function later on. 

>What will you do when the operator is clicked?
pass the operator into variable operator 

>How will you differentiate numbers from operators?
We will use their classes to differentiate — the numbers have a class of “number” and the operators have a class of operators.
$(‘.number’).click()
$(‘.operator’).click()


>How will you know the "value" of a number clicked?
Each button has a unique id and a corresponding value -- aka property.  

>How will you know when a user is done entering the first number?
when the operator is selected, we presume the user has entered their first number. 

>Create a few test "on-click" events. These could just trigger Alert messages for now. If you get further along, then have these buttons alert their "value".
    //on click listener for all numbers 
    $(".number").on("click", function(){
        console.log(this.value);
    });

    //on click listener for all operators
    $(".operator").on("click", function(){
        console.log(this.value);
    });

**Phase II Objectives**
>For the next 30 minutes, your goals should be to:
>Begin creating sets of variables that you think you will need. As a few suggestions:
firstNumber, secondNumber, operator, result

var firstNumber = 
var secondNumber;
var operator;
var result;

> Create code that captures the numbers from button clicks, and then displays them on the HTML.

> Create code that captures an operator click, then immediately tells your code to begin recording the second number. (Example: If a user clicks the "plus" button, you know they are done typing the first number).

> Create code that checks which operator the user has clicked, then saves this operator for later use in a conditional statement. (Example: If a user clicks the "plus" button, you know you will need to be adding two numbers. If a user clicks the "minus" button, you will need to be subtracting two numbers. Think: If-Then statements!)
use parseInt and if/else if conditionals to say if var operator is equal to the values of the html operator ids, then var result is equal to firstNumber x secondNumber. 

Phase III Objectives**
  * For the next 40 minutes, your goals should be to:
    * Complete the functionality you are missing in your code.
    * Spend a few moments really assessing what you still have to do.
    * Get a TA/Instructor to help you set priorities if you are unsure as to how to proceed.

>Complete any remaining functionality in your calculator
>Handle bugs and edge cases (Example: What if a user tries to type in more numbers after getting the result? Will that mess up the screen?)
>Create code to "restart" the calculator after a user clicks "clear".
— use .empty to clear for restarting 

